jobs:
- job: 'Test_Linux'
  pool:
    vmImage: 'ubuntu-16.04' # other options: 'macOS-10.13', 'vs2017-win2016'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python34:
        python.version: '3.4'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'

  - script: pip install -r test_requirements.txt
    displayName: 'Install test requirements'

  - script: tox -e py -- -vv --junitxml=junit/test-results.xml
    displayName: 'Run tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

- job: 'Test_Windows'
  pool:
    vmImage: 'vs2017-win2016' # other options: 'macOS-10.13', 'vs2017-win2016'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python34:
        python.version: '3.4'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'

  - script: pip install -r test_requirements.txt
    displayName: 'Install test requirements'

  - script: tox -e py -- -vv --junitxml=junit/test-results.xml
    displayName: 'Run tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

- job: 'Test_Mac'
  pool:
    vmImage: 'macOS-10.13'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'

  - script: pip install -r test_requirements.txt
    displayName: 'Install test requirements'

  - script: tox -e py -- -vv --junitxml=junit/test-results.xml
    displayName: 'Run tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'


- job: 'Lint_Coverage'
  pool:
    vmImage: 'ubuntu-16.04' # other options: 'macOS-10.13', 'vs2017-win2016'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
    maxParallel: 1

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'

  - script: pip install -r test_requirements.txt
    displayName: 'Install test requirements'

  - script: flake8 .
    displayName: 'Run lint'

  - script: tox -e py -- -vv --junitxml=junit/test-results.xml --cov=multievent --cov-report=xml --cov-report=html
    displayName: 'Run tests'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'